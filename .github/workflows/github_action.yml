name: Deploy to Firebase

on:
  workflow_dispatch:
    inputs:
      release_notes:
        type: string
        required: false
        default: 'trigger build'
        description: 'Release Notes'
  push:
    branches:
      - 'release/**'

jobs:
  build-and-distribute:
    name: Build and Distribute
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Read tester groups
        id: read_tester
        run: |
          # Read and clean emails from file
          TESTER_EMAILS=$(cat tester.txt | tr -d '[:space:]')
          echo "::set-output name=emails::$TESTER_EMAILS"

      - name: Read release notes from file
        id: read_releasenote
        run: |
          # Use input if provided, otherwise read from file
          if [ -n "${{ inputs.release_notes }}" ]; then
            echo "Using release notes from workflow input"
            RELEASE_NOTES="${{ inputs.release_notes }}"
          else
            echo "Reading release notes from file"
            RELEASE_NOTES=$(cat ./releasenote.txt)
          fi
          echo "::set-output name=notes::$RELEASE_NOTES"

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: wrapper

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Build Debug APK
        run: ./gradlew assembleDebug

      - name: Upload to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{ secrets.FIREBASE_APP_ID }}
          serviceCredentialsFileContent: ${{ secrets.CREDENTIAL_FILE_CONTENT }}
          testers: ${{ steps.read_tester.outputs.emails }}
          file: app/build/outputs/apk/debug/app-debug.apk
          releaseNotes: ${{ steps.read_releasenote.outputs.notes }}